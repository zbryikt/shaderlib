// Generated by LiveScript 1.3.1
var glslify, cloud;
glslify = require('glslify');
cloud = require("./sample/cloud");
window.addEventListener('load', function(){
  var shader, renderer;
  shader = {
    fragmentShader: glslify('precision highp float;\n#pragma glslify: noise = require(\'../../src/noise.shader\')\n#pragma glslify: vignette = require(\'../../src/vignette.shader\')\nuniform vec2 uResolution;\nuniform float uTime;\nuniform sampler2D uIn1;\nvoid main() {\n  vec2 pos;\n  float s, d;\n  float c = 0.;\n  float t = uTime * 1.;\n  vec2 uv = gl_FragCoord.xy / uResolution.xy;\n  uv.y = uv.y * uResolution.y / uResolution.x;\n  uv = uv * 0.8 + vec2(.1, .1);\n  for(int i=0;i<50;i++) {\n    s = noise(float(i) * 9527.7259);\n    s = pow(s, 2.5) * 194. + 6.;\n    //s = s * s * s * 80. + 20.;\n    pos = vec2(\n      uv.x + 1. * noise(float(i) * 18132.456) + sin(float(i) + t * 1.2 + uv.y) * 0.03 + t * s * 0.001,\n      uv.y + 136.4261 * noise(float(i) * 97523.332 + s) + t * s * 0.001\n    );\n    pos = vec2(\n      mod(pos.x / s, .5 / s) - 0.25 / s,\n      mod(pos.y / s, .5 / s) - 0.25 / s\n    );\n    d = clamp( (1. / s) - length( pos ) / (0.5 / s), 0., 0.01 * pow(s,.5));\n    d = d * 300. * (pow(s/100., 2.) + 0.002);\n    c += d;\n  }\n  float vg = vignette(1.1, 0.5, uv);\n  //float vg = 1. - vignette(1.0, 0.5, uv);\n  gl_FragColor = vec4(vg * (vec3(texture2D(uIn1, uv)) * 0.9 + vec3(clamp(c, 0., 1.)) * 0.8), 1.);\n  //gl_FragColor = vg * (  vec4(vec3(clamp(c, 0., 1.)), 1.));\n}\n')
  };
  renderer = new ShaderRenderer([cloud, shader], {
    root: '#root'
  });
  return renderer.animate();
});